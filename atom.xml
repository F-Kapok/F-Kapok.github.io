<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cream-K</title>
  
  <subtitle>永言配命，自求多福</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.creamk.com/"/>
  <updated>2020-01-06T21:29:10.824Z</updated>
  <id>https://www.creamk.com/</id>
  
  <author>
    <name>Kapok</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>跟大家聊聊 IOC（Inverse of Control） 与 DI（Dependency Injection）</title>
    <link href="https://www.creamk.com/posts/3026198080.html"/>
    <id>https://www.creamk.com/posts/3026198080.html</id>
    <published>2020-01-06T21:28:00.000Z</published>
    <updated>2020-01-06T21:29:10.824Z</updated>
    
    <content type="html"><![CDATA[<div class="note default">            <p><p><br /></p></p><blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p><font size=6>良好的开端是成功的一半</font></p>            <i class="fa fa-quote-right"></i>          </blockquote>          </div><p>&nbsp;&nbsp;&nbsp;&nbsp;在java入坑已经快两年了，一直处于以完成功能为目的的学习状态，把代码最重要的精髓都忽略掉了，从2019下半年才开始注重自己的代码结构以及设计模式的运用，最重要的是原理的掌握，这样才能在飞速发展的时代立足。望处于我这种状态的小伙伴早日找到正确的道路~</p><p>&nbsp;&nbsp;&nbsp;&nbsp;目前我正在学习七月老师的 <strong><span class="exturl" data-url="aHR0cHM6Ly9jbGFzcy5pbW9vYy5jb20vc2FsZS9qYXZhZnVsbHN0YWNrLw==">从Java后端到Web全栈课程<i class="fa fa-external-link-alt"></i></span></strong> ，讲师很优秀很负责，大家也是有目共睹，不管你是菜鸟小白亦或是大神码农在茫然的时候推荐看一下七月老师的课程，不会让你失望的，接下来我讲写一下自己通过数天整理的IOC与DI的相关内容。<br><a id="more"></a></p><h3 id="IOC（Inverse-of-Control）"><a href="#IOC（Inverse-of-Control）" class="headerlink" title="IOC（Inverse of Control）"></a>IOC（Inverse of Control）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;控制反转，也可以称为依赖倒置。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;所谓依赖（<strong>就是没有他你不行</strong>），从程序的维度就是 A类 想要实现一个功能，<font color=red>除了本身的逻辑外还需要调用 B类 中的某个方法，那么我们就可以理解为 A类 依赖 B类。</font></p><p>&nbsp;&nbsp;&nbsp;&nbsp;所谓倒置（<strong>就是你需要啥给你啥</strong>），当 A类 想调用 B类 中的方法时需要在 A类的调用中引入B类，<font color=red>最常用的方法是在A类的方法中将B类作为入参传入，或者直接new对象，还有许多设计模式可以帮助实现获取B类实例，比如常见的工厂模式</font>这里可理解为 A类主动获取B类的实例对象，当然这是不符合倒置的，反过来说则就是倒置，<font color=red>A类要调动B类的话会通过某种方式将B类送上门来。</font></p><h3 id="DI（Dependency-Injection）"><a href="#DI（Dependency-Injection）" class="headerlink" title="DI（Dependency Injection）"></a>DI（Dependency Injection）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;依赖注入，即对象中的内置对象是通过<strong>注入</strong>的方式进行创建。常见的注入方式就是set()方法；在七月老师的全栈课程中，Judger类的构造函数中引入了FenceGroup类，属于构造器注入；以接口的方式注入，在方法中直接传入接口类；这就相当于IOC的一部分实现。</p><h3 id="代码案例（Locator模式）"><a href="#代码案例（Locator模式）" class="headerlink" title="代码案例（Locator模式）"></a>代码案例（Locator模式）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;服务定位器模式（Service Locator Pattern）利用缓存对象将服务对象存储起来以便于下次使用，这样可以在很大程度上提高应用程序的性能。类似享元模式（flyweight）将对象放到池（内存）中可参考 Integer 的实现源码，以下给出的是Locator的实体。</p><ul><li><strong>服务（Service） - 实际处理请求的服务。对这种服务的引用可以通过Key在上下文（context）中获取到。</strong></li><li><strong>服务定位器（Service Locator） - 服务定位器是通过缓存对象中的Key来查找或者缓存（一般是第一次调用时触发）服务对象。</strong></li><li><strong>缓存（Cache） - 缓存存储服务的引用，以便复用它们。</strong></li><li><strong>客户端（Client） - Client 是通过 ServiceLocator 调用服务的对象。</strong></li></ul><ol><li>建服务接口 Service<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 创建服务接口 Service。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Service</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getKey</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>建实体服务<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 创建两个实例实体服务</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service1</span> <span class="keyword">implements</span> <span class="title">Service</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"Service1"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"Executing Service1"</span>);       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service2</span> <span class="keyword">implements</span> <span class="title">Service</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"Service2"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"Executing Service2"</span>);       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>为查询服务的Key创建上下文（InitialContext）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 为查询服务的Key创建上下文（InitialContext）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitialContext</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(String key)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (key.equalsIgnoreCase(<span class="string">"SERVICE1"</span>))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"Looking up and creating a new Service1 object"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Service1();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.equalsIgnoreCase(<span class="string">"SERVICE2"</span>)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"Looking up and creating a new Service2 object"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Service2();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>创建缓存 Cache<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 创建缓存 Cache</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cache</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> List&lt;Service&gt; services;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Cache</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        services = <span class="keyword">new</span> ArrayList&lt;Service&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Service <span class="title">getService</span><span class="params">(String key)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (Service service : services) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (service.getKey().equalsIgnoreCase(key)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                System.out.println(<span class="string">"Returning cached  "</span>+service+<span class="string">" object"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">return</span> service;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(Service newService)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">boolean</span> exists = <span class="keyword">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (Service service : services) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (service.getKey().equalsIgnoreCase(newService.getKey()))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                exists = <span class="keyword">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!exists) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            services.add(newService);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>创建服务定位器<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 创建服务定位器</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceLocator</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Cache cache;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">static</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        cache = <span class="keyword">new</span> Cache();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Service <span class="title">getService</span><span class="params">(String key)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Service s = cache.getService(key);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (s != <span class="keyword">null</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        InitialContext context = <span class="keyword">new</span> InitialContext();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        Service s1 = (Service) context.lookup(key);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        cache.addService(s1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> s1;       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>使用 ServiceLocator 来演示服务定位器设计模式<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 使用 ServiceLocator 来演示服务定位器设计模式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@author</span> kapok</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Service s = ServiceLocator.getService(<span class="string">"Service1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        s.execute();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        s = ServiceLocator.getService(<span class="string">"Service2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        s.execute();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        s = ServiceLocator.getService(<span class="string">"Service1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        s.execute();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        s = ServiceLocator.getService(<span class="string">"Service2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        s.execute();      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li>打印结果<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Looking up and creating a <span class="keyword">new</span> Service1 object</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Executing Service1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Looking up and creating a <span class="keyword">new</span> Service2 object</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Executing Service2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Returning cached  com.fans.Service1@<span class="number">23</span>as4632 object</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Executing Service1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Returning cached  com.fans.Service2@<span class="number">4574</span>do46 object</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Executing Service2</span></pre></td></tr></table></figure><div class="note default">            <p> 这个模式我觉得完美展示了DI与IOC的原理，如果将缓存直接初始化N个服务，那么就很类似spring的动态代理实现了。</p>          </div></li></ol><h3 id="生活场景案例"><a href="#生活场景案例" class="headerlink" title="生活场景案例"></a>生活场景案例</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;假如你有一天口渴了，要喝水，那么你可以到小卖部去买，告诉他们，你需要一瓶水，然后小卖部给你一瓶水！这本来没有太大问题，关键是如果小卖部很远，那么你必须知道：从你家如何到小卖部开车or骑自行车or打的or坐公交or坐地铁。。。。；还要考虑是不是需要高德一下小卖部的电话问一下小卖部里是否有你需要的水；等等，也许有太多的问题要考虑了。也就是说，为了一瓶水，你可能需要依赖于某些交通工具或别的工具，问题是不是变得复杂了？那么如何解决这个问题呢？</p><p>&nbsp;&nbsp;&nbsp;&nbsp;没错!赶快拿起手机下载 <strong><span class="exturl" data-url="aHR0cHM6Ly9maWxlLmlzaGFuc29uZy5jb20vaW1nL3FyQ29kZS8xLnBuZw==">闪送APP<i class="fa fa-external-link-alt"></i></span></strong> 立即下单就可获取你需要的水，这样一来你只需要做两件事情，就可以过得轻松又自在：1、注册闪送会员；2、同城下单标注地址以及备注需要什么。<font color=red>这里你就是 A类，水就是 B类。用闪送就属于依赖倒置，自己去买就是依赖不倒置，闪送APP又类似于对象池，各个商家入驻闪送时填写表单的方式就是依赖注入。</font></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;七月老师在课程中经常强调代码的维护成本是最高的，所以在这里我给大家推荐一本形象易懂的java设计模式书籍 <strong><span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTQlQTclRTglQUYlOUQlRTglQUUlQkUlRTglQUUlQTElRTYlQTglQTElRTUlQkMlOEYvODUyNjI/ZnI9YWxhZGRpbg==">大话设计模式<i class="fa fa-external-link-alt"></i></span></strong> 来一起脱坑，慕课网上也有一门特别好的课程Geely老师的 <strong><span class="exturl" data-url="aHR0cHM6Ly9jb2RpbmcuaW1vb2MuY29tL2NsYXNzLzI3MC5odG1s">Java设计模式精讲 Debug方式+内存分析<i class="fa fa-external-link-alt"></i></span></strong> ，这些内容实在是不太好吸收，只能慢慢的积累，不过总结了一个很好用的东西 -- 【抽象编程】</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;
            &lt;p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;            &lt;i class=&quot;fa fa-quote-left&quot;&gt;&lt;/i&gt;            &lt;p&gt;&lt;font size=6&gt;良好的开端是成功的一半&lt;/font&gt;&lt;/p&gt;            &lt;i class=&quot;fa fa-quote-right&quot;&gt;&lt;/i&gt;          &lt;/blockquote&gt;
          &lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在java入坑已经快两年了，一直处于以完成功能为目的的学习状态，把代码最重要的精髓都忽略掉了，从2019下半年才开始注重自己的代码结构以及设计模式的运用，最重要的是原理的掌握，这样才能在飞速发展的时代立足。望处于我这种状态的小伙伴早日找到正确的道路~&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;目前我正在学习七月老师的 &lt;strong&gt;&lt;a href=&quot;https://class.imooc.com/sale/javafullstack/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;从Java后端到Web全栈课程&lt;/a&gt;&lt;/strong&gt; ，讲师很优秀很负责，大家也是有目共睹，不管你是菜鸟小白亦或是大神码农在茫然的时候推荐看一下七月老师的课程，不会让你失望的，接下来我讲写一下自己通过数天整理的IOC与DI的相关内容。&lt;br&gt;
    
    </summary>
    
    
      <category term="后端技术" scheme="https://www.creamk.com/categories/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="https://www.creamk.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>WELCOME</title>
    <link href="https://www.creamk.com/posts/88e9fa9.html"/>
    <id>https://www.creamk.com/posts/88e9fa9.html</id>
    <published>2019-12-06T19:52:03.240Z</published>
    <updated>2020-10-01T18:37:59.050Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/bootstrap.min.js@3.3.5/bootstrap.min.js"></script><style type="text/css">  .glyphicon-chevron-left:before{/* content: "《"; */}.glyphicon-chevron-right:before{/* content: "》"; */}.right-siders{   border-radius: 10px;   /*margin-top: 5px;*/   margin-bottom: -1px;}.my-carousel{    margin-bottom: 15px; }.my-carousel:hover{  opacity: 0.5}@media (max-width: 767px){.rights{display: none;}.carousel{width: 100% !important;height: 100% !important;}.slide{width: 100% !important;height: 100% !important;}}.carousel{width: 65%;height: 100%;position: relative;}.carousel-inner {  position: relative;  overflow: hidden;  width: 100%;}.carousel-inner > .item {  display: none;  position: relative;  -webkit-transition: 0.6s ease-in-out left;  -o-transition: 0.6s ease-in-out left;  transition: 0.6s ease-in-out left;}.carousel-inner > .item > img,.carousel-inner > .item > a > img {  line-height: 1;}@media all and (transform-3d), (-webkit-transform-3d) {  .carousel-inner > .item {    -webkit-transition: -webkit-transform 0.6s ease-in-out;    -moz-transition: -moz-transform 0.6s ease-in-out;    -o-transition: -o-transform 0.6s ease-in-out;    transition: transform 0.6s ease-in-out;    -webkit-backface-visibility: hidden;    -moz-backface-visibility: hidden;    backface-visibility: hidden;    -webkit-perspective: 1000px;    -moz-perspective: 1000px;    perspective: 1000px;  }  .carousel-inner > .item.next,  .carousel-inner > .item.active.right {    -webkit-transform: translate3d(100%, 0, 0);    transform: translate3d(100%, 0, 0);    left: 0;  }  .carousel-inner > .item.prev,  .carousel-inner > .item.active.left {    -webkit-transform: translate3d(-100%, 0, 0);    transform: translate3d(-100%, 0, 0);    left: 0;  }  .carousel-inner > .item.next.left,  .carousel-inner > .item.prev.right,  .carousel-inner > .item.active {    -webkit-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    left: 0;  }}.carousel-inner > .active,.carousel-inner > .next,.carousel-inner > .prev {  display: block;}.carousel-inner > .active {  left: 0;}.carousel-inner > .next,.carousel-inner > .prev {  position: absolute;  top: 0;  width: 100%;}.carousel-inner > .next {  left: 100%;}.carousel-inner > .prev {  left: -100%;}.carousel-inner > .next.left,.carousel-inner > .prev.right {  left: 0;}.carousel-inner > .active.left {  left: -100%;}.carousel-inner > .active.right {  left: 100%;}.carousel-control {  position: absolute;  top: 0;  left: 0;  bottom: 0;  width: 15%;  opacity: 0.5;  filter: alpha(opacity=50);  font-size: 20px;  color: #fff;  text-align: center;  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);  background-color: rgba(0, 0, 0, 0);}.carousel-control.left {  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);  background-repeat: repeat-x;  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);}.carousel-control.right {  left: auto;  right: 0;  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);  background-repeat: repeat-x;  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);}.carousel-control:hover{  outline: 0;  color: #fff;  text-decoration: none;  opacity: 0.9;  filter: alpha(opacity=90);}.carousel-control .icon-prev,.carousel-control .icon-next,.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right {  position: absolute;  top: 50%;  margin-top: -10px;  z-index: 5;  display: inline-block;}.carousel-control .icon-prev,.carousel-control .glyphicon-chevron-left {  left: 50%;  margin-left: -10px;}.carousel-control .icon-next,.carousel-control .glyphicon-chevron-right {  right: 50%;  margin-right: -10px;}.carousel-control .icon-prev,.carousel-control .icon-next {  width: 20px;  height: 20px;  line-height: 1;  font-family: serif;}.carousel-control .icon-prev:before {  content: '\2039';}.carousel-control .icon-next:before {  content: '\203a';}.carousel-indicators {  position: absolute;  bottom: -18px;  left: 50%;  z-index: 15;  width: 60%;  margin-left: -30%;  padding-left: 0;  list-style: none;  text-align: center;}.carousel-indicators li {  display: inline-block;  width: 10px;  height: 10px;  margin: 7px;  text-indent: -999px;  border: 1px solid #fff;  border-radius: 10px;  cursor: pointer;  background-color: #000 \9;  background-color: rgba(0, 0, 0, 0);}.carousel-indicators .active {  margin: 7px;  width: 12px;  height: 12px;  background-color: #fff;}.carousel-caption {  position: absolute;  left: 15%;  right: 15%;  bottom: 20px;  z-index: 10;  padding-top: 20px;  padding-bottom: 20px;  color: #fff;  text-align: center;  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);}.carousel-caption .btn {  text-shadow: none;}@media screen and (min-width: 768px) {  .carousel-control .glyphicon-chevron-left,  .carousel-control .glyphicon-chevron-right,  .carousel-control .icon-prev,  .carousel-control .icon-next {    width: 30px;    height: 30px;    margin-top: -10px;    font-size: 30px;    cursor: url(/images/pointer.cur),auto;  }  .carousel-control .glyphicon-chevron-left,  .carousel-control .icon-prev {    margin-left: -10px;  }  .carousel-control .glyphicon-chevron-right,  .carousel-control .icon-next {    /* margin-right: -10px; */  }  .carousel-caption {    left: 20%;    right: 20%;    padding-bottom: 30px;  }  .carousel-indicators {    bottom: -20px;  }}</style><div width="100%"  id="carousel" style="border: 0px; overflow: hidden; border-radius: 10px; margin-bottom: 12px;" scrolling="no"><div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="3500" style="float:left">      <!-- 轮播（Carousel）指标 -->      <ol class="carousel-indicators">        <li data-target="#myCarousel" data-slide-to="0"></li>        <li data-target="#myCarousel" data-slide-to="1"></li>        <li data-target="#myCarousel" data-slide-to="2"></li>        <li data-target="#myCarousel" data-slide-to="3"></li>      </ol>    <!-- 轮播（Carousel）项目 -->    <div class="carousel-inner" id="carousel-pro" style="height: 360px; border-radius: 10px; width: 100%;"><a class="item active" href="https://baike.baidu.com/item/%E5%9C%A3%E8%AF%9E%E8%8A%82/127881?fr=aladdin" target="_self" style="height: 100%;"><img data-src="/images/banner/banner001.jpg"   style="width: 100%; height: 100%" ></a>        <a class="item" href="https://baike.baidu.com/item/%E6%B7%B1%E5%9C%B3/140588?fr=aladdin" target="_self" style="height: 100%;"><img data-src="/images/banner/banner002.jpg"   style="width: 100%; height: 100%" ></a>        <a class="item" href="https://baike.baidu.com/item/%E6%9D%A8%E5%B9%82/149851?fr=aladdin" target="_self" style="height: 100%;"><img data-src="/images/banner/banner003.jpg"   style="width: 100%; height: 100%" ></a>        <a class="item" href="http://www.iqiyi.com/a_19rrhb3xvl.html?vfm=2008_aldbd" target="_self" style="height: 100%;"><img data-src="/images/banner/banner004.jpg"   style="width: 100%; height: 100%" ></a></div>  <!-- 轮播（Carousel）导航 -->      <a class="left carousel-control" data-target="#myCarousel" href="javascript:void(0);" role="button" data-slide="prev">      <span class="glyphicon glyphicon-chevron-left" aria-hidden="true">《</span>      </a>      <a class="right carousel-control" data-target="#myCarousel" href="javascript:void(0);" role="button" data-slide="next">          <span class="glyphicon glyphicon-chevron-right" aria-hidden="true">》</span>      </a></div>   <div  class="rights" style="width:28%;height:24%;margin-right:0;margin-left:25px;float:left">     <!-- 天气插件 -->      <div id="iframe">        <iframe style="margin-bottom:-35px;margin-top:10px" frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="100"  src="//tianqi.2345.com/plugin/widget/index.htm?s=2&z=3&t=1&v=2&d=1&bd=0&k=000000&f=&ltf=009944&htf=cc0000&q=1&e=1&a=1&c=54511&w=300&h=55&align=left"></iframe>      </div>     <!-- r热门排行 -->     <div class="my-carousel">         <a href="/hot/" target="_self">            <img class="right-siders nofancybox" data-src="/images/hot.png" width="100%"/>         </a>     </div>     <!-- 时光留影 -->     <div class="my-carousel">         <a href="/photo/" target="_self">           <img class="right-siders nofancybox" data-src="/images/time.png"/>         </a>     </div>      <!-- 推荐阅读 -->      <div class="my-carousel">        <a href="/books/" target="_self">          <img class="right-siders nofancybox" data-src="/images/read.png"/>        </a>      </div>      <!-- 订阅本站 -->      <div class="my-carousel">         <a href="/links/" target="_self">           <img class="right-siders nofancybox" data-src="/images/subscribe.png"/>         </a>      </div>   </div></div><script>var initMainWidth=document.querySelector('.main').offsetWidth;adapterHeight(initMainWidth);$(window).resize(function() {    var newMainWidth=document.querySelector('.main').offsetWidth;    adapterHeight(newMainWidth);});function adapterHeight(width){    var initRate=1;    if (width<=750){      //手机端      initRate=0.58;      $('#carousel').attr("style","border: 0px; overflow: hidden; border-radius: 10px; margin-bottom: 12px; margin-top: 10px;");     }else if(width<=917){      //移动端--ipad 适配天气      initRate=-4;    }else if(width<=974){      //移动端--ipad      initRate=0.32;    }else if(width<=1211){      //更换天气预报iframe      initRate = -3;    }else if(width<=1324){      //更换天气预报iframe      initRate = -2;    }else if(width <= 1492){      //更换天气预报iframe      initRate = -1;    }else{      initRate=0.21;    }     switch(initRate){      //  无比例 0 默认值 310px 根据实际情况设置      case 0:        $('#carousel-pro').attr("style","height:310px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * 310px");      break;      // 默认比例 1      case 1:        $('#carousel-pro').attr("style","height:100%; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * 100%");      break;      case -1:        $('#iframe').attr('style','margin-bottom: 10px;');        document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:-35px;margin-top: 10px"  frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="100" src="//i.tianqi.com/index.php?c=code&id=12&icon=5"></iframe>';        var newCarouseHeight=width*0.22;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;      case -2:        $('#iframe').attr('style','margin-bottom: 10px;');        document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:10px;"  frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="100" src="//i.tianqi.com/index.php?c=code&id=19&icon=5&temp=0&num=1&site=12"></iframe>';         var newCarouseHeight=width*0.25;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;      case -3:        $('#iframe').attr('style','margin-bottom: 10px;');        document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:10px;"  frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="115" src="//i.tianqi.com/index.php?c=code&id=4&icon=5&wind=1&num=1&site=12"></iframe>';        var newCarouseHeight=width*0.27;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;      case -4:        $('#iframe').attr('style','margin-bottom: 10px;');        document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:10px;"  frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="115" src="//i.tianqi.com/index.php?c=code&id=4&icon=5&wind=1&num=1&site=12"></iframe>';        var newCarouseHeight=width*0.34;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;      case 0.32:        $('#iframe').attr('style','margin-bottom: 10px;');      document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:10px;"  frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="100" src="//i.tianqi.com/index.php?c=code&id=19&icon=5&temp=0&num=1&site=12"></iframe>';newCarouseHeight=width*initRate;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;      default:        $('#iframe').attr('style','margin-bottom: 10px;');       document.getElementById('iframe').innerHTML='<iframe style="margin-bottom:-35px;margin-top:10px" frameborder="0" scrolling="no" hspace="0" allowtransparency="true" width="387" height="100"  src="//tianqi.2345.com/plugin/widget/index.htm?s=2&z=3&t=1&v=2&d=1&bd=0&k=000000&f=&ltf=009944&htf=cc0000&q=1&e=1&a=1&c=54511&w=300&h=55&align=left"></iframe>';newCarouseHeight=width*initRate;        $('#carousel-pro').attr("style","height:"+newCarouseHeight+"px; border-radius: 10px; width: 100%;");        console.log("--> 自适配成功："+width+"px * "+newCarouseHeight+"px");      break;    }}</script>]]></content>
    
    <summary type="html">
    
      
      
        
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap.mi
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
